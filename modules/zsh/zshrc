##################################################
# Dotfiles
##################################################

export DOTFILES_PRIVATE=$HOME/.private

# Load private environment variables, if any
if [ -d $DOTFILES_PRIVATE ]; then
  for file in "$DOTFILES_PRIVATE"/*.conf; do
    source $file
  done
fi

##################################################
# Main
##################################################

# Use Zsh colors
autoload -U colors && colors

setopt autopushd pushdsilent pushdtohome

# Remove duplicate entries
setopt pushdignoredups

# This reverts the +/- operators.
setopt pushdminus

# Allow typing comments in the shell (that start with `#`)
# They will be gracefully ignored
setopt interactive_comments

##################################################
# PATH
##################################################

export PATH="/usr/local/sbin:$PATH"
export PATH="$HOME/bin:$PATH"

# Import paths from a local file
PATHS_FILE=$HOME/.paths
if [ -f $PATHS_FILE ]; then
  while read directory; do
    if [[ $PATH != *"$directory"* ]]; then
      # Prepend
      export PATH="$directory:$PATH"
    fi
  done < $PATHS_FILE
fi

# Directories to jump to with "cd"
# See https://zwischenzugs.com/2019/05/11/seven-surprising-bash-variables/
export CDPATH="."

# Import paths from a local file
DIRS_FILE=$HOME/.hotdirs
if [ -f $DIRS_FILE ]; then
  while read directory; do
    if [[ $PATH != *"$directory"* ]]; then
      # Append
      export CDPATH="$CDPATH:$directory"
    fi
  done < $DIRS_FILE
fi

##################################################
# MAIL
##################################################

# Prevent shell from checking email
unset MAILCHECK

##################################################
# EDITOR
##################################################

export EDITOR=vim

##################################################
# GPG
##################################################

export GPG_TTY=$(tty)

# Its important to set this to the master key,
# as otherwise we might be encrypting things
# specifically for a subkey that might no longer
# be available, and then not even the master key
# will be able to decrypt it.
export GPGKEY_ENCRYPT="0x91B08B2CBA5EAB1A"
export GPGKEY_SIGN="$GPGKEY_ENCRYPT"

##################################################
# XQuartz
##################################################

# Allow compiling X11 programs on macOS
XQUARTZ_DIRECTORY="/opt/X11"
if [ -d "$XQUARTZ_DIRECTORY" ]; then
  export PKG_CONFIG_PATH="$XQUARTZ_DIRECTORY/share/pkgconfig:$XQUARTZ_DIRECTORY/lib/pkgconfig:$PKG_CONFIG_PATH"
fi

##################################################
# HOMEBREW
##################################################

# See https://github.com/drduh/macOS-Security-and-Privacy-Guide/issues/138
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_INSECURE_REDIRECT=1
export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_CASK_OPTS=--require-sha

# Prefer Python 2 over Python 3
# See https://github.com/OfflineIMAP/offlineimap/issues/472
export PATH="/usr/local/opt/python2/libexec/bin:$PATH"

##################################################
# PAGER
##################################################

export PAGER=less
export MANPAGER=$PAGER

# Less configuration
export LESS="-F -X --raw-control-chars --LONG-PROMPT"

# Coloured man pages
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;38;5;74m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;37m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[04;38;5;146m'

##################################################
# LANG
##################################################

export LANG=en_US.UTF-8

##################################################
# GREP
##################################################

alias grep="$(whence -p grep) --color=auto"

##################################################
# XZ
##################################################

# Use maximum compression by default
export XZ_OPT=-9e

##################################################
# Autocompletion
##################################################

# Load systems
autoload -U compinit
compinit

# For autocompletion with an arrow-key driven interface
zstyle ':completion:*' menu select

# For autocompletion of command line switches for aliases
setopt completealiases

# Enable the usage of Bash autocompletion files
autoload bashcompinit
bashcompinit

# Enable command correction
setopt correct

# Enable history completion
bindkey '^R' history-incremental-search-backward

##################################################
# Coloured ls
##################################################

# Zsh to use the same colors as ls
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# Setting this variable has the same effect as
# passing the -G option, but its a better approach
# since -G is not valid in OpenBSD
export CLICOLOR=1

alias ls="ls -F"

##################################################
# History
##################################################

HISTSIZE=1000
HISTFILE=~/.zshhistory
SAVEHIST=1000

# Prevent duplicate lines in history
setopt HIST_IGNORE_DUPS

# Share history between instances
setopt SHARE_HISTORY

##################################################
# Dirs
##################################################

# Zsh can be configured to remember the DIRSTACKSIZE last visited folders.
# This can then be used to cd them very quickly.
# Use dirs -v to print the dirstack and cd -<NUM> to go to any of them

DIRSTACKFILE="$HOME/.zshdirs"

if [[ -f $DIRSTACKFILE  ]] && [[ $#dirstack -eq 0  ]]; then
  dirstack=( ${(f)"$(< $DIRSTACKFILE)"} )
fi

chpwd() {
  print -l $PWD ${(u)dirstack} > $DIRSTACKFILE
}

DIRSTACKSIZE=20

##################################################
# Aliases
##################################################

alias youtube="mpsyt"
alias reload="source $HOME/.zshrc"
alias ll="ls -l"
alias t="task.sh"

# To mitigate typos. This makes it possible
# for the shell to understand i.e. "gitp ush" given
# "ush" is also an alias for "push"
alias gitp="git"

# Diff using git from outside of a git repo
# See https://stackoverflow.com/questions/16683121/git-diff-between-two-different-files
alias gdiff="git diff --no-index"

if which ack-grep >/dev/null; then
  alias ack="ack-grep"
fi

##################################################
# Git
##################################################

alias pr="git push-track && hub pull-request"

# To mitigate typos :)
alias gti="git"
alias ggit="git"
alias got="git"

# This is a tricky way to define git aliases so
# that we get git autocompletion with them as well
# See https://github.com/robbyrussell/oh-my-zsh/issues/2394#issuecomment-45287624

alias gc="git checkout"
alias __git-checkout_main=_git_checkout
compdef _git gc=git-checkout

alias gt="git status"
alias tg="git status"
alias __git-status_main=_git_status
compdef _git gt=git-status
compdef _git tg=git-status

alias gb="git branch"
alias __git-branch_main=_git_branch
compdef _git gb=git-branch

##################################################
# Keyboard
##################################################

# Enable delete key
bindkey "^[[3~" delete-char
bindkey "^[3;5~" delete-char

# Enable Home and End keys
bindkey '\e[H' beginning-of-line
bindkey '\e[F' end-of-line

##################################################
# NVM
##################################################

export NVM_DIR="$HOME/.nvm"
if [[ -f $NVM_DIR/nvm.sh ]]; then
  source $NVM_DIR/nvm.sh
fi

##################################################
# CC/CXX
##################################################

# Prefer clang
if hash clang 2>/dev/null; then
  export CC=clang
  export CXX=clang++
fi

##################################################
# OPAM
##################################################

. $HOME/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

##################################################
# RBENV
##################################################

if hash rbenv 2>/dev/null; then
  eval "$(rbenv init -)"
fi

##################################################
# VIM
##################################################

# If MacVim is available, use MacVim's precompiled
# vim in the terminal, as it's known to be faster.
if command -v mvim >/dev/null 2>&1; then
  alias vim="mvim -v"
fi

##################################################
# PASS
##################################################

# Enable loading extensions at $HOME/.password-store/.extensions
# See `man pass`
export PASSWORD_STORE_ENABLE_EXTENSIONS=true

# To keep a backup somewhere else
export PASSWORD_STORE_DIR="$HOME/SpiderOak Hive/Pass"

##################################################
# Prompt
##################################################

# Apply parameter expansion each time prompt is displayed
setopt prompt_subst

# Get the name of the branch we're on
git_prompt_info() {
  ref=$(command git symbolic-ref HEAD 2> /dev/null) || \
  ref=$(command git rev-parse --short HEAD 2> /dev/null) || return 0
  echo "${ref#refs/heads/} "
}

_git_prompt() {
  echo "%{$fg[green]%}$(git_prompt_info)%{$reset_color%}"
}

_code_prompt() {
  echo "%{$fg_bold[red]%}%?%{$reset_color%}"
}

PROMPT='
$(_code_prompt) $(_git_prompt)$fg[yellow][$(uname):$(hostname)] $fg[blue]%3~$reset_color
$ '
